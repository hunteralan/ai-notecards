// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @default(autoincrement()) @id

  createdAt DateTime @default(now())

  email String @unique
  givenName String
  familyName String
  picture String
  emailVerified Boolean

  imageGroups UploadGroup[]

  Class Class[]
}

model File {
  id Int @default(autoincrement()) @id

  createdAt DateTime @default(now())

  imageData Bytes
  mimeType String

  imageGroupId Int
  imageGroup UploadGroup @relation(fields: [imageGroupId], references: [id])
}

model UploadGroup {
  id Int @default(autoincrement()) @id

  createdAt DateTime @default(now())

  createdById Int
  createdBy User @relation(fields: [createdById], references: [id])

  classId Int
  class Class @relation(fields: [classId], references: [id])

  images File[]
  noteCards NoteCard[]
}

model NoteCard {
  id Int @default(autoincrement()) @id
  
  createdAt DateTime @default(now())

  question String
  answer String

  imageGroupId Int
  imageGroup UploadGroup @relation(fields: [imageGroupId], references: [id])
}

model Class {
  id Int @default(autoincrement()) @id

  createdAt DateTime @default(now())
  deletedAt DateTime?

  className String

  userId Int
  user User @relation(fields: [userId], references: [id])

  UploadGroup UploadGroup[]
}